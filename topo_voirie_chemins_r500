-- Cette requête permet de calculer le ration de différence entre les voiries d'OSM et de 
-- il permet entre autre de garder une trace de la longueur 

-- entrée 
-- planet_osm_line : issue de osm2pgsql
-- ign_bd_topo_tronçon :  ( utilisé dans le cadre de la mise à disposition du RGE aux collectivités publiques )
-- ign_r500 route 
-- communes de la zone choisie

--sortie 

-- communes ( avec la longueur de 
  -- osm_route
  -- osm_chemin
  -- ign_route
  -- ign_chemin
  -- ign_r500
  
-- communes_view
  -- ratio_topo_route
  --ratio_topo_chemin
  --ratio_r500



-- calcul linéaire routes seulement pour OSM
ALTER TABLE communes
  drop column if exists osm_route;
ALTER TABLE  communes
   ADD COLUMN osm_route double precision; 
UPDATE ONLY communes
   SET osm_route = (
       SELECT DISTINCT
           sum(st_length(st_intersection(communes.geom,planet_osm_line.way)))
       FROM
           planet_osm_line
       WHERE
           communes.geom && planet_osm_line.way
           AND 
               planet_osm_line.highway in('motorway','trunk','primary','secondary','tertiary','unclassified','residential','service','road','primary_link','secondary_link','tertiary_link')
       );




       -- calcul linéaire chemin seulement pour OSM
ALTER TABLE communes 
drop column if exists osm_chemin;
ALTER TABLE communes
   ADD COLUMN osm_chemin double precision;
UPDATE ONLY communes
   SET osm_chemin = (
       SELECT DISTINCT
           sum(st_length(st_intersection(communes.geom,planet_osm_line.way)))
       FROM
           planet_osm_line
       WHERE
           communes.geom && planet_osm_line.way
           AND planet_osm_line.highway in ('track','path','footway','bridleway','cycleway')
               
       );

-- calcul linéaire routes seulement pour IGN
ALTER TABLE communes
drop column if exists ign_route_topo;
ALTER TABLE communes
   ADD COLUMN ign_route_topo double precision;
UPDATE ONLY communes
SET ign_route_topo = (
       SELECT DISTINCT
           sum(st_length(st_intersection(communes.geom,ign_route.geom)))
       FROM
           ign_route
       WHERE
           communes.geom && ign_route.geom
           and
(ign_route.nature in ('Bretelle',
'Route à 2 chaussé',
'Piste cyclable',
'Route à 1 chaussé',
'Quasi-autoroute',
'Autoroute')));


-- calcul linéaire chemin seulement pour IGN
ALTER TABLE  communes
drop column if exists ign_chemin_topo;
ALTER TABLE  communes
   ADD COLUMN ign_chemin_topo double precision;
   UPDATE ONLY communes
   SET ign_chemin_topo = (
       SELECT DISTINCT
           sum(st_length(st_intersection(communes.geom,ign_route.geom)))
       FROM
           ign_route
       WHERE
           communes.geom && ign_route.geom
           AND (
               ign_route.nature in ('Chemin','Escalier','Piste cyclable','Route empierrée','Sentier')   
       ));


------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
-- calcul linéaire hydro seulement pour OSM
ALTER TABLE communes
drop column if exists osm_hydro;
ALTER TABLE communes
   ADD COLUMN osm_hydro double precision;
UPDATE ONLY communes
   SET osm_hydro = (
       SELECT DISTINCT
           sum(st_length(st_intersection(communes.geom,planet_osm_line.way)))
       FROM
           planet_osm_line
       WHERE
           communes.geom && planet_osm_line.way
           AND ( planet_osm_line.waterway <> 'NULL' )
       );



-- calcul linéaire hydro seulement pour IGN
ALTER TABLE communes
drop column if exists ign_hydro;
ALTER TABLE communes
   ADD COLUMN ign_hydro double precision;
UPDATE ONLY communes
SET ign_hydro = (
       SELECT DISTINCT
           sum(st_length(st_intersection(communes.geom,ign_hydro.geom)))
       FROM
           ign_hydro
       WHERE
           communes.geom && ign_hydro.geom
       );


------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------

-- creation commune_view avec ratios

drop table if exists communes_view;
	CREATE TABLE communes_view as 
	select 
	id, 
	communes.nom,
	communes.geom,
	communes.osm_route / NULLIF(communes.ign_route_topo, 0::double precision) as ratio_topo_route,
	communes.osm_chemin / NULLIF(communes.ign_chemin_topo, 0::double precision) as ratio_topo_chemin,
	communes.osm_hydro / NULLIF(communes.ign_hydro, 0::double precision) as ratio_hydro
	from communes;
